{"version":3,"sources":["services/twitter.js","services/geocode.js","reducers/tweetsReducer.js","reducers/viewportReducer.js","reducers/focusReducer.js","reducers/filterReducer.js","reducers/index.js","store.js","components/Splash.js","components/Main/Search.js","components/Main/Map.js","components/Main/Filter.js","components/Main/Loading.js","components/Main/index.js","components/Tweets/Tweet.js","components/Tweets/index.js","App.js","index.js"],"names":["ENCODEDKEY","btoa","basic","token","a","async","cachedToken","window","localStorage","getItem","axios","post","headers","Authorization","result","fetchedToken","data","access_token","setItem","term","max_id","get","params","q","count","statuses","address","key","colors","fetchTweetsPending","status","message","progress","type","pending","fetchTweetsSuccess","tweets","INITIAL_STATE","error","tweetsReducer","state","action","setViewport","viewport","latitude","longitude","zoom","viewportReducer","focusReducer","id","filterReducer","filter","rootReducer","combineReducers","focus","store","createStore","applyMiddleware","thunk","styled","div","FontAwesomeIcon","Container","Input","input","props","width","Button","button","Icon","connect","fetchTweets","requests","dispatch","i","twitterServices","length","tweet","user","location","lang","limiter","Bottleneck","minTime","promises","map","index","schedule","geocodeServices","Promise","all","locations","languages","forEach","includes","push","language","name","color","find","useState","setTerm","placeholder","value","onChange","event","target","onClick","icon","MarkerIcon","filterTweets","height","onViewportChange","etc","mapboxApiAccessToken","mapStyle","results","geometry","lat","lng","Wrapper","active","Color","Count","Name","Language","setFilter","ISO6391","getName","Content","Status","Header","Message","h1","Progress","Bar","Logo","Profile","img","ScreenName","h3","Text","p","Image","setFocus","closed","media","entities","onMouseEnter","onMouseLeave","transitionDuration","transitionInterpolator","FlyToInterpolator","profile_image_url","screen_name","text","src","media_url_https","Toggle","setClosed","library","add","fas","fab","GlobalStyle","createGlobalStyle","App","useEffect","Main","ReactDOM","render","document","getElementById"],"mappings":"oPAIMA,EAAaC,KAAK,GAAD,OAFX,4BAEW,YADR,uDAETC,EAAK,gBAAYF,GAEnBG,EAAQ,KAyCG,EAvCE,8BAAAC,EAAAC,OAAA,qDACVC,EAAcC,OAAOC,aAAaC,QAAQ,iBADhC,gBAIfN,EAAQG,EAJO,yCAAAF,EAAA,MAOMM,IAAMC,KAC1B,2EACA,gCACA,CACCC,QAAS,CACR,eACC,kDACDC,cAAeX,MAdH,OAOTY,EAPS,OAkBTC,EAAeD,EAAOE,KAAKC,aACjCV,OAAOC,aAAaU,QAAQ,eAAgBH,GAC5CZ,EAAQY,EApBO,uCAuCF,EAfG,SAAOI,EAAMC,GAAb,eAAAhB,EAAAC,OAAA,kEAAAD,EAAA,MACIM,IAAMW,IAC1B,qFACA,CACCT,QAAS,CAAEC,cAAc,UAAD,OAAYV,IACpCmB,OAAQ,CACPC,EAAE,GAAD,OAAKJ,EAAL,6CACDK,MAAO,IACPJ,aARc,cACXN,EADW,yBAYVA,EAAOE,KAAKS,UAZF,sCCrBH,EARG,SAAMC,GAAN,eAAAtB,EAAAC,OAAA,kEAAAD,EAAA,MACIM,IAAMW,IAC1B,oDACA,CAAEC,OAAQ,CAAEI,UAASC,IALX,8CAEM,cACXb,EADW,yBAKVA,EAAOE,MALG,sCCAZY,EAAS,CACd,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAOKC,EAAqB,SAACC,EAAQC,EAASC,GAAlB,MAAgC,CAC1DC,KAL4B,uBAM5BC,QAAS,CAAEJ,SAAQC,UAASC,cAGvBG,EAAqB,SAAAC,GAAM,MAAK,CACrCH,KAT4B,uBAU5BG,WAiFKC,EAAgB,CACrBH,QAAS,CACRJ,QAAQ,EACRE,SAAU,EACVD,QAAS,IAEVf,KAAM,GACNsB,MAAO,MAwBOC,EArBO,WAAoC,IAAnCC,EAAkC,uDAA1BH,EAAeI,EAAW,uCACxD,OAAQA,EAAOR,MACd,IAxG2B,uBAyG1B,OAAO,eAAKO,EAAZ,CAAmBN,QAAQ,eAAMO,EAAOP,WACzC,IAzG2B,uBA0G1B,OAAO,eACHM,EADJ,CAECxB,KAAMyB,EAAOL,OACbF,QAASG,EAAcH,UAEzB,IA9GyB,qBA+GxB,OAAO,eACHM,EADJ,CAECF,MAAOG,EAAOH,MACdJ,QAASG,EAAcH,UAEzB,QACC,OAAOM,IC5IGE,EAAc,SAAAC,GAAQ,MAAK,CACvCV,KAHoB,eAIpBU,aAGKN,EAAgB,CACrBO,SAAU,GACVC,UAAW,EACXC,KAAM,KAYQC,EATS,WAAoC,IAAnCP,EAAkC,uDAA1BH,EAAeI,EAAW,uCAC1D,OAAQA,EAAOR,MACd,IAfmB,eAgBlB,OAAOQ,EAAOE,SACf,QACC,OAAOH,ICLKQ,EATM,WAA2B,IAA1BR,EAAyB,uDAAjB,KAAMC,EAAW,uCAC9C,OAAQA,EAAOR,MACd,IANgB,YAOf,OAAOQ,EAAOQ,GACf,QACC,OAAOT,ICIKU,EATO,WAA4B,IAA3BV,EAA0B,uDAAlB,MAAOC,EAAW,uCAChD,OAAQA,EAAOR,MACd,IANiB,aAOhB,OAAOQ,EAAOU,OACf,QACC,OAAOX,ICKKY,EAPKC,YAAgB,CACnCjB,OAAQG,EACRI,SAAUI,EACVO,MAAON,EACPG,OAAQD,ICLMK,EAFDC,YAAYJ,EAAaK,YAAgBC,M,srBCAvCC,IAAOC,IAAV,KAcKD,IAAOC,IAAV,KAGDD,IAAOC,IAAV,KAKED,YAAOE,IAAPF,CAAH,KAtBV,I,uoCCGA,IAAMG,EAAYH,IAAOC,IAAV,KAcTG,EAAQJ,IAAOK,MAAV,KACD,SAAAC,GAAK,OAAIA,EAAMC,SAenBC,EAASR,IAAOS,OAAV,KAeNC,GAAOV,YAAOE,IAAPF,CAAH,KA8BKW,eAAQ,KAAM,CAAEC,YPxCJ,SAACpD,EAAMqD,GAAP,OAAoB,SAAMC,GAAN,6BAAArE,EAAAC,OAAA,gDAE9CoE,EAAS5C,GAAmB,EAAM,uBAAwB,IAFZ,SAKzCO,EAAS,GACThB,EAAS,KACJsD,EAAI,EAPgC,YAO7BA,EAAIF,GAPyB,mCAAApE,EAAA,MAQzBuE,EAA0BxD,EAAMC,IARP,OAQtCJ,EARsC,OAS5CoB,EAAM,sBAAOA,GAAP,YAAkBpB,IACxBI,EAASJ,EAAKA,EAAK4D,OAAS,GAAG3B,GAC/BwB,EAAS5C,GAAmB,EAAM,kBAAmB6C,EAAIF,IAXb,QAOfE,IAPe,8BAa7CtC,EAASA,EAAOe,QACf,SAAA0B,GAAK,OAC2B,IAA/BA,EAAMC,KAAKC,SAASH,QACL,QAAfC,EAAMG,MACS,OAAfH,EAAMG,QAIFC,EAAU,IAAIC,IAAW,CAC9BC,QAAS,MAIJC,EAAWhD,EAAOiD,KACvB,SAAOR,EAAOS,GAAd,SAAAlF,EAAAC,OAAA,kEAAAD,EAAA,MACO6E,EAAQM,UAAS,WAQtB,OAPAd,EACC5C,GACC,EACA,qBACAyD,EAAQlD,EAAOwC,SAGVY,EAA0BX,EAAMC,KAAKC,cAT9C,gFA3B4C,YAAA3E,EAAA,MAuCrBqF,QAAQC,IAAIN,IAvCS,QAuCvCO,EAvCuC,OA0C7CvD,EAASA,EACPiD,KAAI,SAACR,EAAOS,GAAR,sBACDT,EADC,CAEJE,SAAUY,EAAUL,QAEpBnC,QAAO,SAAA0B,GAAK,MAA8B,OAA1BA,EAAME,SAASjD,UAG7B8D,EAAY,GAChBxD,EAAOyD,SAAQ,SAAAhB,GACTe,EAAUE,SAASjB,EAAMG,OAC7BY,EAAUG,KAAKlB,EAAMG,SAGvBY,EAAYA,EAAUP,KAAI,SAACW,EAAUV,GAAX,MAAsB,CAC/CW,KAAMD,EACNE,MAAOtE,EAAO0D,OAEflD,EAASA,EAAOiD,KAAI,SAAAR,GAAK,sBACrBA,EADqB,CAExBG,KAAMY,EAAUO,MAAK,SAAAH,GAAQ,OAAIA,EAASC,OAASpB,EAAMG,aAI1DP,EAAStC,EAAmBC,IAlEiB,kDAqE7CqC,EA1EiC,CAClCxC,KAb0B,qBAc1BK,MAwE2B,EAAD,KArEoB,4DOwChCgC,EA1BA,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACX6B,mBAAS,IADE,mBAC5BjF,EAD4B,KACtBkF,EADsB,KAInC,OACC,kBAAC,EAAD,KACC,kBAACtC,EAAD,CACC9B,KAAK,OACLqE,YAAY,mBACZC,MAAOpF,EACPqF,SAAU,SAAAC,GAAK,OAAIJ,EAAQI,EAAMC,OAAOH,QACxCrC,MAAM,UAQP,kBAACC,EAAD,CAAQwC,QAAS,kBAAMpC,EAAYpD,EAAM,KACxC,kBAAC,GAAD,CAAMyF,KAAM,CAAC,MAAO,iB,+OCrExB,IAIMC,GAAalD,IAAOC,IAAV,MAGF,SAAAK,GAAK,OAAKA,EAAMX,MAAQ,WAAa,cAExC,SAAAW,GAAK,OAAKA,EAAMX,MAAQ,oBAAsB,UAC1C,SAAAW,GAAK,OAAIA,EAAMiC,SAsCxBY,GAAe,SAAC,GAAD,IAAG1E,EAAH,EAAGA,OAAQe,EAAX,EAAWA,OAAX,MACT,QAAXA,EACGf,EAAOpB,KACPoB,EAAOpB,KAAKmC,QAAO,SAAA0B,GAAK,OAAIA,EAAMG,KAAKiB,OAAS9C,MAQrCmB,gBANS,SAAA9B,GAAK,MAAK,CACjCG,SAAUH,EAAMG,SAChBP,OAAQ0E,GAAatE,GACrBc,MAAOd,EAAMc,SAG0B,CAAEZ,eAA3B4B,EA7CH,SAAC,GAA8C,IAA5C3B,EAA2C,EAA3CA,SAAUD,EAAiC,EAAjCA,YAAaN,EAAoB,EAApBA,OAAQkB,EAAY,EAAZA,MAO7C,OACC,kBAAC,KAAD,eACCY,MAAM,OACN6C,OAAO,QACHpE,EAHL,CAICqE,iBAAkB,SAAArE,GAAQ,OAVH,SAAAA,GACUA,EAA1BuB,MAA0BvB,EAAnBoE,OADsB,IACXE,EADU,aACFtE,EADE,oBAEpCD,EAAYuE,GAQmBD,CAAiBrE,IAC/CuE,qBA1BF,mGA2BEC,SA1BW,qCA4BV/E,EAAOiD,KAAI,SAAAR,GAAU,IAAD,EAIhBA,EAAME,SAASqC,QAAQ,GAAGC,SAAStC,SAFtCuC,EAFmB,EAEnBA,IACAC,EAHmB,EAGnBA,IAED,OACC,kBAAC,KAAD,CAAQ3E,SAAU0E,EAAKzE,UAAW0E,GACjC,kBAACV,GAAD,CACCvD,MAAOA,IAAUuB,EAAM5B,GACvBiD,MAAOrB,EAAMG,KAAKkB,gB,quCCvCzB,IAAMsB,GAAU7D,IAAOC,IAAV,MAiDPE,GAAYH,IAAOC,IAAV,MAOA,SAAAK,GAAK,OAAKA,EAAMwD,OAAS,UAAY,UAO9CC,GAAQ/D,IAAOC,IAAV,MAKI,SAAAK,GAAK,OAAIA,EAAMiC,SAGxByB,GAAQhE,IAAOC,IAAV,MAMLgE,GAAOjE,IAAOC,IAAV,MAKJiE,GAAW,SAAC,GAAoD,IAAlD7B,EAAiD,EAAjDA,SAAU5D,EAAuC,EAAvCA,OAAQ8D,EAA+B,EAA/BA,MAAO/C,EAAwB,EAAxBA,OAAQ2E,EAAgB,EAAhBA,UAC9CtG,EACQ,QAAbwE,EACG5D,EAAOwC,OACPxC,EAAOe,QAAO,SAAA0B,GAAK,OAAIA,EAAMG,KAAKiB,OAASD,KAAUpB,OACzD,OACC,kBAAC,GAAD,CACC+B,QAAS,kBAAMmB,EAAU9B,IACzByB,OAAQtE,IAAW6C,GAEnB,kBAAC0B,GAAD,CAAOxB,MAAOA,IACd,kBAACyB,GAAD,KAAQnG,GACR,kBAACoG,GAAD,KACe,QAAb5B,EAAqB,MAAQ+B,KAAQC,QAAQhC,MAWnC1B,gBALS,SAAA9B,GAAK,MAAK,CACjCJ,OAAQI,EAAMJ,OAAOpB,KACrBmC,OAAQX,EAAMW,UAGyB,CAAE2E,UN/GjB,SAAA3E,GAAM,MAAK,CAAElB,KAFnB,aAEqCkB,YM+GzCmB,EA1FA,SAAC,GAAmC,IAAjClC,EAAgC,EAAhCA,OAAQe,EAAwB,EAAxBA,OAAQ2E,EAAgB,EAAhBA,UAC7BlC,EAAY,GACZhE,EAAS,GASb,OAPAQ,EAAOyD,SAAQ,SAAAhB,GACTe,EAAUE,SAASjB,EAAMG,KAAKiB,QAClCL,EAAUG,KAAKlB,EAAMG,KAAKiB,MAC1BrE,EAAOmE,KAAKlB,EAAMG,KAAKkB,WAIA,IAAlB9D,EAAOwC,OAAe,KAC5B,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCoB,SAAS,MACT5D,OAAQA,EACR8D,MAAM,UACN/C,OAAQA,EACR2E,UAAWA,IAEXlC,EAAUP,KAAI,SAACW,EAAUV,GAAX,OACd,kBAAC,GAAD,CACCU,SAAUA,EACV5D,OAAQA,EACR8D,MAAOtE,EAAO0D,GACdnC,OAAQA,EACR2E,UAAWA,W,4gDC5ChB,IAAMN,GAAU7D,IAAOC,IAAV,MAaPE,GAAYH,IAAOC,IAAV,MAWTqE,GAAUtE,IAAOC,IAAV,MAKPS,GAAOV,YAAOE,IAAPF,CAAH,MAKJuE,GAASvE,IAAOC,IAAV,MAINuE,GAASxE,IAAOC,IAAV,MAONwE,GAAUzE,IAAO0E,GAAV,MAKPC,GAAW3E,IAAOC,IAAV,MASR2E,GAAM5E,IAAOC,IAAV,MAKC,SAAAK,GAAK,gBAAqB,IAAdA,EAAMC,MAAb,QAyBAI,gBAFS,SAAA9B,GAAK,MAAK,CAAEN,QAASM,EAAMJ,OAAOF,WAE3CoC,EArBC,SAAC,GAAiB,IAAfpC,EAAc,EAAdA,QAClB,OAAOA,EAAQJ,OACd,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAACmG,GAAD,KACC,kBAAC,GAAD,CAAMrB,KAAM,CAAC,MAAO,aACpB,kBAACsB,GAAD,KACC,kBAACC,GAAD,gBACA,kBAACC,GAAD,KAAUlG,EAAQH,QAAlB,SAGF,kBAACuG,GAAD,KACC,kBAACC,GAAD,CAAKrE,MAAOhC,EAAQF,cAIpB,Q,kICjFL,IAAM8B,GAAYH,IAAOC,IAAV,MAiBA4E,GAXF,WACZ,OACC,kBAAC,GAAD,KACC,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,kzCCZH,IAAM1E,GAAYH,IAAOC,IAAV,MAeT6E,GAAU9E,IAAOC,IAAV,MAIQ,SAAAK,GAAK,oBAAWA,EAAMyE,IAAjB,QAGf,SAAAzE,GAAK,0BAAiBA,EAAMiC,UAIjC+B,GAAUtE,IAAOC,IAAV,MAKPgE,GAAOjE,IAAO0E,GAAV,MAMJM,GAAahF,IAAOiF,GAAV,MAOVC,GAAOlF,IAAOmF,EAAV,MAMJC,GAAQpF,IAAO+E,IAAV,MAuCIpE,eAAQ,KAAM,CAAE0E,SV/FP,SAAA/F,GAAE,MAAK,CAAEhB,KAFf,YAEgCgB,OU+FTP,eAA1B4B,EAhCD,SAAC,GAA8C,IAA5CO,EAA2C,EAA3CA,MAAOmE,EAAoC,EAApCA,SAAUtG,EAA0B,EAA1BA,YAAauG,EAAa,EAAbA,OACtCC,EAAUrE,EAAMsE,SAAhBD,MADmD,EAEtCrE,EAAME,SAASqC,QAAQ,GAAGC,SAAStC,SAClDpC,EAAW,CAAEC,SAHwC,EAEnD0E,IAC0BzE,UAHyB,EAE9C0E,IACqCzE,KAAM,GACxD,OACC,kBAAC,GAAD,CACCsG,aAAc,kBAAMJ,EAASnE,EAAM5B,KACnCoG,aAAc,kBAAML,EAAS,OAC7BrC,QAAS,kBACRjE,EAAY,eACRC,EADO,CAEV2G,mBAAoB,IACpBC,uBAAwB,IAAIC,UAI9B,kBAACf,GAAD,CACCC,IAAK7D,EAAMC,KAAK2E,kBAChBvD,MAAOrB,EAAMG,KAAKkB,QAElB+C,EAAS,KACT,kBAAC,GAAD,KACC,kBAAC,GAAD,KAAOpE,EAAMC,KAAKmB,MAClB,kBAAC0C,GAAD,SAAc9D,EAAMC,KAAK4E,aACzB,kBAACb,GAAD,KAAOhE,EAAM8E,MACZT,GAAS,kBAACH,GAAD,CAAOa,IAAKV,EAAM,GAAGW,uB,26BCnFpC,IAAMrC,GAAU7D,IAAOC,IAAV,MAEJ,SAAAK,GAAK,OAAKA,EAAMgF,OAAS,WAAa,eAIzCnF,GAAYH,IAAOC,IAAV,MASTkG,GAASnG,IAAOS,OAAV,MAuBNC,GAAOV,YAAOE,IAAPF,CAAH,MA0BJmD,GAAe,SAAC,GAAD,IAAG1E,EAAH,EAAGA,OAAQe,EAAX,EAAWA,OAAX,MACT,QAAXA,EACGf,EAAOpB,KACPoB,EAAOpB,KAAKmC,QAAO,SAAA0B,GAAK,OAAIA,EAAMG,KAAKiB,OAAS9C,MAIrCmB,gBAFS,SAAA9B,GAAK,MAAK,CAAEJ,OAAQ0E,GAAatE,MAE1C8B,EA7BA,SAAC,GAAgB,IAAdlC,EAAa,EAAbA,OAAa,EACFgE,oBAAS,GADP,mBACvB6C,EADuB,KACfc,EADe,KAE9B,OAAyB,IAAlB3H,EAAOwC,OAAe,KAC5B,kBAAC,GAAD,CAASqE,OAAQA,GAChB,kBAACa,GAAD,CAAQnD,QAAS,kBAAMoD,GAAWd,KACjC,kBAAC,GAAD,CACCrC,KACCqC,EACG,CAAC,MAAO,gBACR,CAAC,MAAO,oBAId,kBAAC,GAAD,KACE7G,EAAOiD,KAAI,SAAAR,GAAK,OAChB,kBAAC,GAAD,CAAOlD,IAAKkD,EAAM5B,GAAI4B,MAAOA,EAAOoE,OAAQA,Y,mYCpDjDe,IAAQC,IAAIC,IAAKC,KAEjB,IAAMC,GAAcC,YAAH,MAaXvG,GAAYH,IAAOC,IAAV,MAqBA0G,GAjBH,WAKX,OAJAC,qBAAU,WACT5F,MACE,IAGF,oCACC,kBAACyF,GAAD,MACA,kBAAC,GAAD,KACC,kBAACI,GAAD,MACA,kBAAC,GAAD,SChCJC,IAASC,OACR,kBAAC,IAAD,CAAUnH,MAAOA,GAChB,kBAAC,GAAD,OAEDoH,SAASC,eAAe,U","file":"static/js/main.cc3934c8.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst KEY = \"T7vMQVw2hYNzIcnh2d7JhCLVA\";\nconst SECRET = \"6nfklNJ42bs9sF8aWqjuIP752Npj4sVl7JqQK4jQMFCsNgHJ5Z\";\nconst ENCODEDKEY = btoa(`${KEY}:${SECRET}`);\nconst basic = `Basic ${ENCODEDKEY}`;\n\nlet token = null;\n\nconst getToken = async () => {\n\tconst cachedToken = window.localStorage.getItem(\"twitterToken\");\n\tif (cachedToken) {\n\t\t// Set token if present in local storage\n\t\ttoken = cachedToken;\n\t} else {\n\t\t// Otherwise fetch token from twitter\n\t\tconst result = await axios.post(\n\t\t\t\"https://cors-anywhere.herokuapp.com/https://api.twitter.com/oauth2/token\",\n\t\t\t\"grant_type=client_credentials\",\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\":\n\t\t\t\t\t\t\"application/x-www-form-urlencoded;charset=UTF-8\",\n\t\t\t\t\tAuthorization: basic\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tconst fetchedToken = result.data.access_token;\n\t\twindow.localStorage.setItem(\"twitterToken\", fetchedToken);\n\t\ttoken = fetchedToken;\n\t}\n};\n\nconst getTweets = async (term, max_id) => {\n\tconst result = await axios.get(\n\t\t\"https://cors-anywhere.herokuapp.com/https://api.twitter.com/1.1/search/tweets.json\",\n\t\t{\n\t\t\theaders: { Authorization: `Bearer ${token}` },\n\t\t\tparams: {\n\t\t\t\tq: `${term} AND -filter:retweets AND -filter:replies`,\n\t\t\t\tcount: 100,\n\t\t\t\tmax_id\n\t\t\t}\n\t\t}\n\t);\n\treturn result.data.statuses;\n};\n\nexport default { getToken, getTweets };\n","import axios from \"axios\";\n\nconst KEY = \"AIzaSyA2HVmCDtmeYhg9jgLRUtYEb40rfXiyu4w\";\n\nconst getCoords = async address => {\n\tconst result = await axios.get(\n\t\t\"https://maps.googleapis.com/maps/api/geocode/json\",\n\t\t{ params: { address, key: KEY } }\n\t);\n\treturn result.data;\n};\n\nexport default { getCoords };\n","import Bottleneck from \"bottleneck\";\nimport twitterServices from \"../services/twitter\";\nimport geocodeServices from \"../services/geocode\";\n\nconst colors = [\n\t\"#2196F3\",\n\t\"#4CAF50\",\n\t\"#FFC107\",\n\t\"#E91E63\",\n\t\"#03A9F4\",\n\t\"#8BC34A\",\n\t\"#FF9800\",\n\t\"#9C27B0\",\n\t\"#00BCD4\",\n\t\"#FF5722\",\n\t\"#673AB7\",\n\t\"#009688\",\n\t\"#FFEB3B\",\n\t\"#f44336\",\n\t\"#3F51B5\",\n\t\"#CDDC39\"\n];\n\nconst FETCH_TWEETS_PENDING = \"FETCH_TWEETS_PENDING\";\nconst FETCH_TWEETS_SUCCESS = \"FETCH_TWEETS_SUCCESS\";\nconst FETCH_TWEETS_ERROR = \"FETCH_TWEETS_ERROR\";\n\nconst fetchTweetsPending = (status, message, progress) => ({\n\ttype: FETCH_TWEETS_PENDING,\n\tpending: { status, message, progress }\n});\n\nconst fetchTweetsSuccess = tweets => ({\n\ttype: FETCH_TWEETS_SUCCESS,\n\ttweets\n});\n\nconst fetchTweetsError = error => ({\n\ttype: FETCH_TWEETS_ERROR,\n\terror\n});\n\nexport const fetchTweets = (term, requests) => async dispatch => {\n\t// Dispatch pending status\n\tdispatch(fetchTweetsPending(true, \"Initializing request\", 0));\n\ttry {\n\t\t// Fetch and trim tweets\n\t\tlet tweets = [];\n\t\tlet max_id = null;\n\t\tfor (let i = 0; i < requests; i++) {\n\t\t\tconst data = await twitterServices.getTweets(term, max_id);\n\t\t\ttweets = [...tweets, ...data];\n\t\t\tmax_id = data[data.length - 1].id;\n\t\t\tdispatch(fetchTweetsPending(true, \"Fetching tweets\", i / requests));\n\t\t}\n\t\ttweets = tweets.filter(\n\t\t\ttweet =>\n\t\t\t\ttweet.user.location.length !== 0 &&\n\t\t\t\ttweet.lang !== \"und\" &&\n\t\t\t\ttweet.lang !== \"in\"\n\t\t);\n\n\t\t// Set limiter for Google Geocode API\n\t\tconst limiter = new Bottleneck({\n\t\t\tminTime: 100\n\t\t});\n\n\t\t// Fetch locations\n\t\tconst promises = tweets.map(\n\t\t\tasync (tweet, index) =>\n\t\t\t\tawait limiter.schedule(() => {\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\tfetchTweetsPending(\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\"Fetching locations\",\n\t\t\t\t\t\t\tindex / tweets.length\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\treturn geocodeServices.getCoords(tweet.user.location);\n\t\t\t\t})\n\t\t);\n\t\tconst locations = await Promise.all(promises);\n\n\t\t// Merge tweets with locations\n\t\ttweets = tweets\n\t\t\t.map((tweet, index) => ({\n\t\t\t\t...tweet,\n\t\t\t\tlocation: locations[index]\n\t\t\t}))\n\t\t\t.filter(tweet => tweet.location.status === \"OK\");\n\n\t\t// Assign color to tweet language\n\t\tlet languages = [];\n\t\ttweets.forEach(tweet => {\n\t\t\tif (!languages.includes(tweet.lang)) {\n\t\t\t\tlanguages.push(tweet.lang);\n\t\t\t}\n\t\t});\n\t\tlanguages = languages.map((language, index) => ({\n\t\t\tname: language,\n\t\t\tcolor: colors[index]\n\t\t}));\n\t\ttweets = tweets.map(tweet => ({\n\t\t\t...tweet,\n\t\t\tlang: languages.find(language => language.name === tweet.lang)\n\t\t}));\n\n\t\t// Dispatch data if successful\n\t\tdispatch(fetchTweetsSuccess(tweets));\n\t} catch (error) {\n\t\t// Dispatch error if error\n\t\tdispatch(fetchTweetsError(error));\n\t}\n};\n\nconst INITIAL_STATE = {\n\tpending: {\n\t\tstatus: false,\n\t\tprogress: 0,\n\t\tmessage: \"\"\n\t},\n\tdata: [],\n\terror: null\n};\n\nconst tweetsReducer = (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\t\tcase FETCH_TWEETS_PENDING:\n\t\t\treturn { ...state, pending: { ...action.pending } };\n\t\tcase FETCH_TWEETS_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata: action.tweets,\n\t\t\t\tpending: INITIAL_STATE.pending\n\t\t\t};\n\t\tcase FETCH_TWEETS_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: action.error,\n\t\t\t\tpending: INITIAL_STATE.pending\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default tweetsReducer;\n","const SET_VIEWPORT = \"SET_VIEWPORT\";\n\nexport const setViewport = viewport => ({\n\ttype: SET_VIEWPORT,\n\tviewport\n});\n\nconst INITIAL_STATE = {\n\tlatitude: 25,\n\tlongitude: 0,\n\tzoom: 1.2\n};\n\nconst viewportReducer = (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\t\tcase SET_VIEWPORT:\n\t\t\treturn action.viewport;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default viewportReducer;\n","const SET_FOCUS = \"SET_FOCUS\";\n\nexport const setFocus = id => ({ type: SET_FOCUS, id });\n\nconst focusReducer = (state = null, action) => {\n\tswitch (action.type) {\n\t\tcase SET_FOCUS:\n\t\t\treturn action.id;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default focusReducer;\n","const SET_FILTER = \"SET_FILTER\";\n\nexport const setFilter = filter => ({ type: SET_FILTER, filter });\n\nconst filterReducer = (state = \"all\", action) => {\n\tswitch (action.type) {\n\t\tcase SET_FILTER:\n\t\t\treturn action.filter;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default filterReducer;\n","import { combineReducers } from \"redux\";\n\nimport tweetsReducer from \"./tweetsReducer\";\nimport viewportReducer from \"./viewportReducer\";\nimport focusReducer from \"./focusReducer\";\nimport filterReducer from \"./filterReducer\";\n\nconst rootReducer = combineReducers({\n\ttweets: tweetsReducer,\n\tviewport: viewportReducer,\n\tfocus: focusReducer,\n\tfilter: filterReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Wrapper = styled.div`\n\tz-index: 100;\n\tposition: absolute;\n\ttop: 0px;\n\tright: 0px;\n\tbottom: 0px;\n\tleft: 0px;\n\twidth: 100vw;\n\theight: 100vh;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground: #1da1f2;\n`;\nconst Container = styled.div`\n\ttext-align: center;\n`;\nconst Title = styled.div`\n\tfont-family: \"Modak\", cursive;\n\tfont-size: 80rem;\n\tcolor: #ffffff;\n`;\nconst Icon = styled(FontAwesomeIcon)`\n\tfont-size: 80rem;\n\tcolor: #ffffff;\n`;\n\nconst Splash = () => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Container>\n\t\t\t\t<Title>TweetMap</Title>\n\t\t\t\t<Icon icon={[\"fab\", \"twitter\"]} />\n\t\t\t</Container>\n\t\t</Wrapper>\n\t);\n};\n\nexport default Splash;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { fetchTweets } from \"../../reducers/tweetsReducer\";\n\nconst Container = styled.div`\n\tz-index: 10;\n\tposition: absolute;\n\ttop: 20px;\n\tleft: 20px;\n\tdisplay: flex;\n\tbackground: #2d3539;\n\tborder-left: 1px solid #454d51;\n\tborder-top: 1px solid #454d51;\n\tborder-bottom: 1px solid #000000;\n\tborder-right: 1px solid #000000;\n\tborder-radius: 5px;\n\toverflow: hidden;\n`;\nconst Input = styled.input`\n\twidth: ${props => props.width};\n\tpadding: 10px;\n\tfont-family: inherit;\n\tfont-size: 14rem;\n\tcolor: #ffffff;\n\tborder-top: none;\n\tborder-left: none;\n\tborder-bottom: none;\n\tborder-right: 1px solid #000000;\n\tbackground: none;\n\toutline: none;\n\t&::placeholder {\n\t\tcolor: #c9d1d1;\n\t}\n`;\nconst Button = styled.button`\n\tpadding: 10px;\n\tfont-family: inherit;\n\tcolor: #c9d1d1;\n\tbackground: none;\n\tborder-top: none;\n\tborder-left: 1px solid #454d51;\n\tborder-bottom: none;\n\tborder-right: none;\n\toutline: none;\n\t&:hover {\n\t\tcursor: pointer;\n\t\tcolor: #ffffff;\n\t}\n`;\nconst Icon = styled(FontAwesomeIcon)`\n\tfont-size: 16rem;\n`;\n\nconst Search = ({ fetchTweets }) => {\n\tconst [term, setTerm] = useState(\"\");\n\t// const [requests, setRequests] = useState(1);\n\n\treturn (\n\t\t<Container>\n\t\t\t<Input\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Search Tweets...\"\n\t\t\t\tvalue={term}\n\t\t\t\tonChange={event => setTerm(event.target.value)}\n\t\t\t\twidth=\"150px\"\n\t\t\t/>\n\t\t\t{/* <Input\n\t\t\t\ttype=\"number\"\n\t\t\t\tvalue={requests}\n\t\t\t\tonChange={event => setRequests(event.target.value)}\n\t\t\t\twidth=\"50px\"\n\t\t\t/> */}\n\t\t\t<Button onClick={() => fetchTweets(term, 3)}>\n\t\t\t\t<Icon icon={[\"fas\", \"search\"]} />\n\t\t\t</Button>\n\t\t</Container>\n\t);\n};\n\nexport default connect(null, { fetchTweets })(Search);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\n\nimport { setViewport } from \"../../reducers/viewportReducer\";\n\nconst TOKEN =\n\t\"pk.eyJ1IjoiY2xvY2t3b3JrZnR3IiwiYSI6ImNrM3o4NzlqbTA3ZTgzcG9rZ2V1bHo0c2kifQ.4lhOcE8zJZYYGLGuZYOX4Q\";\nconst STYLE = \"mapbox://styles/mapbox/light-v10\";\n\nconst MarkerIcon = styled.div`\n\twidth: 8px;\n\theight: 8px;\n\ttransform: ${props => (props.focus ? \"scale(2)\" : \"scale(1)\")};\n\tborder-radius: 100px;\n\tborder: ${props => (props.focus ? \"1px solid #2d3539\" : \"none\")};\n\tbackground: ${props => props.color};\n\ttransition: all 0.4s ease-in-out;\n`;\n\nconst Map = ({ viewport, setViewport, tweets, focus }) => {\n\t// Update map viewport on change\n\tconst onViewportChange = viewport => {\n\t\tconst { width, height, ...etc } = viewport;\n\t\tsetViewport(etc);\n\t};\n\n\treturn (\n\t\t<ReactMapGL\n\t\t\twidth=\"100%\"\n\t\t\theight=\"100%\"\n\t\t\t{...viewport}\n\t\t\tonViewportChange={viewport => onViewportChange(viewport)}\n\t\t\tmapboxApiAccessToken={TOKEN}\n\t\t\tmapStyle={STYLE}\n\t\t>\n\t\t\t{tweets.map(tweet => {\n\t\t\t\tconst {\n\t\t\t\t\tlat,\n\t\t\t\t\tlng\n\t\t\t\t} = tweet.location.results[0].geometry.location;\n\t\t\t\treturn (\n\t\t\t\t\t<Marker latitude={lat} longitude={lng}>\n\t\t\t\t\t\t<MarkerIcon\n\t\t\t\t\t\t\tfocus={focus === tweet.id}\n\t\t\t\t\t\t\tcolor={tweet.lang.color}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Marker>\n\t\t\t\t);\n\t\t\t})}\n\t\t</ReactMapGL>\n\t);\n};\n\nconst filterTweets = ({ tweets, filter }) =>\n\tfilter === \"all\"\n\t\t? tweets.data\n\t\t: tweets.data.filter(tweet => tweet.lang.name === filter);\n\nconst mapStateToProps = state => ({\n\tviewport: state.viewport,\n\ttweets: filterTweets(state),\n\tfocus: state.focus\n});\n\nexport default connect(mapStateToProps, { setViewport })(Map);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport ISO6391 from \"iso-639-1\";\n\nimport { setFilter } from \"../../reducers/filterReducer\";\n\nconst Wrapper = styled.div`\n\tz-index: 10;\n\tposition: absolute;\n\tbottom: 20px;\n\tleft: 20px;\n\tright: 20px;\n\tdisplay: flex;\n\tbackground: #2d3539;\n\tborder-top: 1px solid #454d51;\n\tborder-left: 1px solid #454d51;\n\tborder-bottom: 1px solid #000000;\n\tborder-right: 1px solid #000000;\n\tborder-radius: 5px;\n\toverflow: scroll;\n`;\n\nconst Filter = ({ tweets, filter, setFilter }) => {\n\tlet languages = [];\n\tlet colors = [];\n\n\ttweets.forEach(tweet => {\n\t\tif (!languages.includes(tweet.lang.name)) {\n\t\t\tlanguages.push(tweet.lang.name);\n\t\t\tcolors.push(tweet.lang.color);\n\t\t}\n\t});\n\n\treturn tweets.length === 0 ? null : (\n\t\t<Wrapper>\n\t\t\t<Language\n\t\t\t\tlanguage=\"all\"\n\t\t\t\ttweets={tweets}\n\t\t\t\tcolor=\"#c9d1d1\"\n\t\t\t\tfilter={filter}\n\t\t\t\tsetFilter={setFilter}\n\t\t\t/>\n\t\t\t{languages.map((language, index) => (\n\t\t\t\t<Language\n\t\t\t\t\tlanguage={language}\n\t\t\t\t\ttweets={tweets}\n\t\t\t\t\tcolor={colors[index]}\n\t\t\t\t\tfilter={filter}\n\t\t\t\t\tsetFilter={setFilter}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</Wrapper>\n\t);\n};\n\nconst Container = styled.div`\n\tflex: 0 0 140px;\n\tdisplay: flex;\n\talign-items: center;\n\tpadding: 10px;\n\tborder-left: 1px solid #454d51;\n\tborder-right: 1px solid #000000;\n\tbackground: ${props => (props.active ? \"#454d51\" : \"none\")};\n\ttransition: all 0.2s ease-in-out;\n\t&:hover {\n\t\tcursor: pointer;\n\t\tbackground: #454d51;\n\t}\n`;\nconst Color = styled.div`\n\twidth: 20px;\n\theight: 20px;\n\tborder-radius: 100px;\n\tborder: 2px solid #ffffff;\n\tbackground: ${props => props.color};\n\tbox-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.75);\n`;\nconst Count = styled.div`\n\tmargin: 0px 5px 0px 10px;\n\tfont-size: 14rem;\n\tfont-weight: 700;\n\tcolor: #ffffff;\n`;\nconst Name = styled.div`\n\tfont-size: 12rem;\n\tcolor: #c9d1d1;\n`;\n\nconst Language = ({ language, tweets, color, filter, setFilter }) => {\n\tconst count =\n\t\tlanguage === \"all\"\n\t\t\t? tweets.length\n\t\t\t: tweets.filter(tweet => tweet.lang.name === language).length;\n\treturn (\n\t\t<Container\n\t\t\tonClick={() => setFilter(language)}\n\t\t\tactive={filter === language}\n\t\t>\n\t\t\t<Color color={color} />\n\t\t\t<Count>{count}</Count>\n\t\t\t<Name>\n\t\t\t\t{language === \"all\" ? \"All\" : ISO6391.getName(language)}\n\t\t\t</Name>\n\t\t</Container>\n\t);\n};\n\nconst mapStateToProps = state => ({\n\ttweets: state.tweets.data,\n\tfilter: state.filter\n});\n\nexport default connect(mapStateToProps, { setFilter })(Filter);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Wrapper = styled.div`\n\tz-index: 5;\n\tposition: absolute;\n\ttop: 0px;\n\tright: 0px;\n\tbottom: 0px;\n\tleft: 0px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground: rgba(29, 161, 242, 0.5);\n`;\n\nconst Container = styled.div`\n\twidth: 300px;\n\tpadding: 20px;\n\tborder-radius: 10px;\n\tbackground: #2d3539;\n\tborder-top: 1px solid #454d51;\n\tborder-left: 1px solid #454d51;\n\tborder-bottom: 1px solid #000000;\n\tborder-right: 1px solid #000000;\n`;\n\nconst Content = styled.div`\n\tdisplay: flex;\n\tmargin-bottom: 20px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n\tfont-size: 35rem;\n\tcolor: #ffffff;\n`;\n\nconst Status = styled.div`\n\tmargin-left: 15px;\n`;\n\nconst Header = styled.div`\n\tmargin-bottom: 10px;\n\tfont-size: 14rem;\n\tfont-weight: 700;\n\tcolor: #ffffff;\n`;\n\nconst Message = styled.h1`\n\tfont-size: 12rem;\n\tcolor: #c9d1d1;\n`;\n\nconst Progress = styled.div`\n\tposition: relative;\n\twidth: 100%;\n\theight: 15px;\n\tborder-radius: 100px;\n\tbackground: #454d51;\n\toverflow: hidden;\n`;\n\nconst Bar = styled.div`\n\tposition: absolute;\n\tleft: 0px;\n\ttop: 0px;\n\tbottom: 0px;\n\twidth: ${props => `${props.width * 100}%`};\n\tbackground: #2296f3;\n`;\n\nconst Loading = ({ pending }) => {\n\treturn pending.status ? (\n\t\t<Wrapper>\n\t\t\t<Container>\n\t\t\t\t<Content>\n\t\t\t\t\t<Icon icon={[\"fab\", \"twitter\"]} />\n\t\t\t\t\t<Status>\n\t\t\t\t\t\t<Header>Loading</Header>\n\t\t\t\t\t\t<Message>{pending.message}...</Message>\n\t\t\t\t\t</Status>\n\t\t\t\t</Content>\n\t\t\t\t<Progress>\n\t\t\t\t\t<Bar width={pending.progress} />\n\t\t\t\t</Progress>\n\t\t\t</Container>\n\t\t</Wrapper>\n\t) : null;\n};\n\nconst mapStateToProps = state => ({ pending: state.tweets.pending });\n\nexport default connect(mapStateToProps)(Loading);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Search from \"./Search\";\nimport Map from \"./Map\";\nimport Filter from \"./Filter\";\nimport Loading from \"./Loading\";\n\nconst Container = styled.div`\n\tposition: relative;\n\twidth: 100%;\n\theight: 100vh;\n`;\n\nconst Logo = () => {\n\treturn (\n\t\t<Container>\n\t\t\t<Search />\n\t\t\t<Map />\n\t\t\t<Filter />\n\t\t\t<Loading />\n\t\t</Container>\n\t);\n};\n\nexport default Logo;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { FlyToInterpolator } from \"react-map-gl\";\n\nimport { setViewport } from \"../../reducers/viewportReducer\";\nimport { setFocus } from \"../../reducers/focusReducer\";\n\nconst Container = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\tpadding: 10px;\n\tborder-left: 1px solid #454d51;\n\tborder-top: 1px solid #454d51;\n\tborder-right: 1px solid #000000;\n\tborder-bottom: 1px solid #000000;\n\ttransition: all 0.2s ease-in-out;\n\t&:hover {\n\t\tcursor: pointer;\n\t\tbackground: #454d51;\n\t}\n`;\n\nconst Profile = styled.div`\n\tflex: 0 0 40px;\n\theight: 40px;\n\tmargin-right: 10px;\n\tbackground-image: ${props => `url(${props.img})`};\n\tbackground-size: cover;\n\tborder-radius: 5px;\n\tborder: ${props => `2px solid ${props.color}`};\n\tbox-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.75);\n`;\n\nconst Content = styled.div`\n\twidth: 100%;\n\toverflow: hidden;\n`;\n\nconst Name = styled.h1`\n\tfont-size: 14rem;\n\tfont-weight: 700;\n\tcolor: #ffffff;\n`;\n\nconst ScreenName = styled.h3`\n\tmargin: 5px 0px;\n\tfont-size: 12rem;\n\tfont-weight: 700;\n\tcolor: #1da1f3;\n`;\n\nconst Text = styled.p`\n\tfont-size: 12rem;\n\tline-height: 14rem;\n\tcolor: #c9d1d1;\n`;\n\nconst Image = styled.img`\n\tmargin-top: 10px;\n\twidth: 100%;\n\theight: auto;\n\tborder-radius: 5px;\n`;\n\nconst Tweet = ({ tweet, setFocus, setViewport, closed }) => {\n\tconst { media } = tweet.entities;\n\tconst { lat, lng } = tweet.location.results[0].geometry.location;\n\tconst viewport = { latitude: lat, longitude: lng, zoom: 5 };\n\treturn (\n\t\t<Container\n\t\t\tonMouseEnter={() => setFocus(tweet.id)}\n\t\t\tonMouseLeave={() => setFocus(null)}\n\t\t\tonClick={() =>\n\t\t\t\tsetViewport({\n\t\t\t\t\t...viewport,\n\t\t\t\t\ttransitionDuration: 1000,\n\t\t\t\t\ttransitionInterpolator: new FlyToInterpolator()\n\t\t\t\t})\n\t\t\t}\n\t\t>\n\t\t\t<Profile\n\t\t\t\timg={tweet.user.profile_image_url}\n\t\t\t\tcolor={tweet.lang.color}\n\t\t\t/>\n\t\t\t{closed ? null : (\n\t\t\t\t<Content>\n\t\t\t\t\t<Name>{tweet.user.name}</Name>\n\t\t\t\t\t<ScreenName>@{tweet.user.screen_name}</ScreenName>\n\t\t\t\t\t<Text>{tweet.text}</Text>\n\t\t\t\t\t{media && <Image src={media[0].media_url_https} />}\n\t\t\t\t</Content>\n\t\t\t)}\n\t\t</Container>\n\t);\n};\n\nexport default connect(null, { setFocus, setViewport })(Tweet);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport Tweet from \"./Tweet\";\n\nconst Wrapper = styled.div`\n\tposition: relative;\n\tflex: ${props => (props.closed ? \"0 0 60px\" : \"0 0 300px\")};\n\theight: 100vh;\n`;\n\nconst Container = styled.div`\n\tz-index: 10;\n\tposition: relative;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: #2d3539;\n\toverflow-y: scroll;\n`;\n\nconst Toggle = styled.button`\n\tz-index: 10;\n\tposition: absolute;\n\tleft: -60px;\n\ttop: 20px;\n\twidth: 40px;\n\theight: 40px;\n\tborder-top: 1px solid #454d51;\n\tborder-left: 1px solid #454d51;\n\tborder-bottom: 1px solid #000000;\n\tborder-right: 1px solid #000000;\n\tborder-radius: 5px;\n\toutline: none;\n\tbackground: #2d3539;\n\tcolor: #c9d1d1;\n\ttransition: all 0.2s ease-in-out;\n\t&:hover {\n\t\tcursor: pointer;\n\t\tcolor: #ffffff;\n\t\tbackground: #454d51;\n\t}\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n\tfont-size: 16rem;\n`;\n\nconst Tweets = ({ tweets }) => {\n\tconst [closed, setClosed] = useState(false);\n\treturn tweets.length === 0 ? null : (\n\t\t<Wrapper closed={closed}>\n\t\t\t<Toggle onClick={() => setClosed(!closed)}>\n\t\t\t\t<Icon\n\t\t\t\t\ticon={\n\t\t\t\t\t\tclosed\n\t\t\t\t\t\t\t? [\"fas\", \"chevron-left\"]\n\t\t\t\t\t\t\t: [\"fas\", \"chevron-right\"]\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Toggle>\n\t\t\t<Container>\n\t\t\t\t{tweets.map(tweet => (\n\t\t\t\t\t<Tweet key={tweet.id} tweet={tweet} closed={closed} />\n\t\t\t\t))}\n\t\t\t</Container>\n\t\t</Wrapper>\n\t);\n};\n\nconst filterTweets = ({ tweets, filter }) =>\n\tfilter === \"all\"\n\t\t? tweets.data\n\t\t: tweets.data.filter(tweet => tweet.lang.name === filter);\n\nconst mapStateToProps = state => ({ tweets: filterTweets(state) });\n\nexport default connect(mapStateToProps)(Tweets);\n","import React, { useEffect } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\n\nimport twitterServices from \"./services/twitter\";\n\nimport Splash from \"./components/Splash\";\nimport Main from \"./components/Main\";\nimport Tweets from \"./components/Tweets\";\n\nlibrary.add(fas, fab);\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n\tbox-sizing: border-box;\n\tfont-family: 'Open Sans', sans-serif;\n\tfont-size: 1px;\n\t-webkit-font-smoothing: antialiased;\n\tbackground: #2d3539;\n  }\n  *, *:before, *:after {\n  \tbox-sizing: inherit;\n  }\n`;\n\nconst Container = styled.div`\n\tdisplay: flex;\n`;\n\nconst App = () => {\n\tuseEffect(() => {\n\t\ttwitterServices.getToken();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<Container>\n\t\t\t\t<Main />\n\t\t\t\t<Tweets />\n\t\t\t</Container>\n\t\t\t{/* <Splash /> */}\n\t\t</>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"reset-css\";\n\nimport store from \"./store\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}